{
  "hash": "b9bae18107da1f8e5978abb4a75d0cbb",
  "result": {
    "markdown": "# Performance \n\nPoner aqui el problema\n\n## Data\n### Direct: Download files\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-078776f0fd2c0f81767b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-078776f0fd2c0f81767b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\"],[\"porto_alegre_net_largest\",\"porto_200_origin\",\"porto_200_destination\",\"porto_alegre_net_pre_component_one_star\",\"weight_sampling_200_origin\",\"weight_sampling_200_destination\",\"random_10_origin\",\"random_10_destination\",\"porto_alegre_net_largest_vertices_pgr\",\"porto_alegre_net_astart\",\"porto_alegre_net_pre_component_one_star_vertices_pgr\"],[\"naive\",\"naive\",\"naive\",\"bbox\",\"bbox\",\"bbox\",\"array\",\"array\",\"array\",\"array\",\"array\"],[\"<a href=\\\"https://drive.google.com/file/d/1mZIZAw3gsp9lCDeqGUyv_HclwqpKlInf/view?usp=sharing\\\">Download: porto_alegre_net_largest<\\/a>\",\"<a href=\\\"n\\\">Download: porto_200_origin<\\/a>\",\"<a href=\\\"n\\\">Download: porto_200_destination<\\/a>\",\"<a href=\\\"https://drive.google.com/file/d/1nRCenmBSpzRQzSixjWQqIBeqeLpR4LdO/view?usp=sharing\\\">Download: porto_alegre_net_pre_component_one_star<\\/a>\",\"<a href=\\\"https://drive.google.com/file/d/1dBB_VXPapG8AVMjpimb8ZxxltL_fF4it/view?usp=sharing\\\">Download: weight_sampling_200_origin<\\/a>\",\"<a href=\\\"https://drive.google.com/file/d/1-Hdt9_cgGuyFcqcV8kcQlNOBuQPzPPTr/view?usp=sharing\\\">Download: weight_sampling_200_destination<\\/a>\",\"<a href=\\\"https://drive.google.com/file/d/1EyYxrsdm1kHwId74tlfwNXehj426NYlH/view?usp=sharing\\\">Download: random_10_origin<\\/a>\",\"<a href=\\\"https://drive.google.com/file/d/1rqhgvZ0IcwSFax8kL3Gcr-mBdkn0ACUU/view?usp=sharing\\\">Download: random_10_destination<\\/a>\",\"<a href=\\\"https://drive.google.com/file/d/1OFQeOEcuyijDcnMLSf40dv7kX3PG0ahJ/view?usp=sharing\\\">Download: porto_alegre_net_largest_vertices_pgr<\\/a>\",\"<a href=\\\"n\\\">Download: porto_alegre_net_astart<\\/a>\",\"<a href=\\\"https://drive.google.com/file/d/1AaxCA5cY29rnH92sa2kmSnna0UJ6ipDS/view?usp=sharing\\\">Download: porto_alegre_net_pre_component_one_star_vertices_pgr<\\/a>\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>file<\\/th>\\n      <th>section<\\/th>\\n      <th>url<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"file\",\"targets\":1},{\"name\":\"section\",\"targets\":2},{\"name\":\"url\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n### Indirect: Build from queries\n\nmeter tambien el od_2722 que sin eso no puedes construir\n\n**Origin-Destination matrix**\n\n\n::: {.cell}\n\n```{.sql .cell-code  code-summary=\"Create OD matrix weighted sampling\"}\n\n---- Create 200 origin\nCREATE TABLE sampling_weight_200_origin  AS\nwith porto_200_origin AS (\n        SELECT\n            * \n        FROM \n            od_2728_snapped_origin \n        ORDER BY random() LIMIT 200)\n        SELECT * FROM  porto_200_origin;  \n---- Create 200 destination\nCREATE TABLE sampling_weight_200_destination  AS\nwith porto_200_destination AS (\n        SELECT\n            * \n        FROM \n            od_2728_snapped_origin \n        ORDER BY random() LIMIT 200)\n        SELECT * FROM  porto_200_destination;  \n```\n:::\n\n\n**Creating table with x,y for pgr_astar()**\n\n\n::: {.cell}\n\n```{.sql .cell-code  code-summary=\"Create network table with x,y for pgr_astar()\"}\nCREATE TABLE porto_alegre_net_largest_astar AS\t\t    \nWITH porto_alegre_net_astart AS (\nSELECT \n  *,\n  st_startpoint(the_geom) AS start_pt,\n  st_endpoint(the_geom) AS enstart_pt\nFROM \n  porto_alegre_net_largest AS net)\nSELECT *,\n\tst_x(start_pt) AS x1,\n\tst_y(start_pt) AS y1,\n\tst_x(end_pt) AS x2,\n\tst_y(end_pt) AS y2\nFROM \n  porto_alegre_net_astart;\n```\n:::\n\n\n\n**Applying spatial index**\n\n\n::: {.cell}\n\n```{.sql .cell-code  code-summary=\"Applying index to weighted OD matrix\"}\n---- Create index for origin\nCREATE INDEX idx_sampling_weight_200_origin_net_id ON sampling_weight_200_origin USING hash(net_id);\nCREATE INDEX idx_sampling_weight_200_origin_geom ON sampling_weight_200_origin USING gist(the_geom);\n---- Create index for destination\nCREATE INDEX idx_sampling_weight_200_destination_net_id ON sampling_weight_200_destination USING hash(net_id);\nCREATE INDEX idx_sampling_weight_200_destination_geom ON sampling_weight_200_destination USING gist(the_geom);\n---- Cluster\nCLUSTER porto_alegre_net_largest USING idx_porto_alegre_net_largest_geom;\n---- Vacuum clean\nVACUUM(full, ANALYZE) sampling_weight_200_origin;\nVACUUM(full, ANALYZE) sampling_weight_200_destination;\nVACUUM(full, ANALYZE) porto_alegre_net_largest;\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code  code-summary=\"Applying spatial index in the network\"}\nCREATE INDEX idx_porto_alegre_net_largest_geom ON porto_alegre_net_largest  USING GIST(the_geom);\nCREATE INDEX idx_porto_alegre_net_largest_source ON porto_alegre_net_largest  USING btree(source);\nCREATE INDEX idx_porto_alegre_net_largest_target ON porto_alegre_net_largest  USING btree(target);\nCREATE INDEX idx_porto_alegre_net_largest_cost ON porto_alegre_net_largest  USING btree(cost);\nCREATE INDEX idx_porto_alegre_net_largest_bidirectid ON porto_alegre_net_largest  USING btree(bidirectid);\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code  code-summary=\"Create OD matrix regular sampling for agg_array()\"}\n---- create origin_destination\nCREATE TEMP TABLE vertices_lookup_10\nAS             \nWITH all_pairs AS (\n  SELECT f.net_id AS fid, f.the_geom AS fgeom,\n         t.net_id AS tid, t.the_geom AS tgeom\n    FROM random_10_origin AS f,\n         random_10_destination AS t\n),\nvertices AS (\n  SELECT fid, tid,\n     (SELECT id\n        FROM porto_alegre_net_largest_vertices_pgr AS way\n       ORDER BY way.the_geom <-> fgeom\n       LIMIT 1) AS fv,\n     (SELECT id\n        FROM porto_alegre_net_largest_vertices_pgr AS way\n       ORDER BY way.the_geom <-> tgeom\n       LIMIT 1) AS tv\n  FROM all_pairs\n)\nSELECT * FROM vertices;\n---- Number of OD\nSELECT count(*) FROM vertices_lookup_10;\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code  code-summary=\"Applying index to network for astrar()\"}\n---- adding spatial index\nCREATE INDEX idx_porto_alegre_net_largest_astar_net_the_geom ON porto_alegre_net_largest_astar  USING gist(the_geom);\nCREATE INDEX idx_porto_alegre_net_largest_astar_net_start ON porto_alegre_net_largest_astar  USING gist(start_pt);\nCREATE INDEX idx_porto_alegre_net_largest_astar_net_end ON porto_alegre_net_largest_astar USING gist(end_pt);\nCREATE INDEX idx_porto_alegre_net_largest_astar_net_x1 ON porto_alegre_net_largest_astar  USING btree(x1);\nCREATE INDEX idx_porto_alegre_net_largest_astar_net_y1 ON porto_alegre_net_largest_astar USING btree(y1);\nCREATE INDEX idx_porto_alegre_net_largest_astar_net_x2 ON porto_alegre_net_largest_astar USING btree(x2);\nCREATE INDEX idx_porto_alegre_net_largest_astar_net_y2 ON porto_alegre_net_largest_astar USING btree(y2);                      \n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code  code-summary=\"Applying index on vertices_lookup\"}\n---- Create index\nCREATE INDEX idx_vertices_lookup_10_fid ON vertices_lookup_10 USING hash(fid);\nCREATE INDEX idx_vertices_lookup_10_tid ON vertices_lookup_10 USING hash(tid);\nCREATE INDEX idx_vertices_lookup_10_fv ON vertices_lookup_10 USING hash(fv);\nCREATE INDEX idx_vertices_lookup_10_tv ON vertices_lookup_10 USING hash(tv);\n---- Vacuum and clean\nVACUUM(full, ANALYZE) vertices_lookup_10;\nVACUUM(full, ANALYZE) porto_alegre_net_largest;\n```\n:::\n\n\n## Routing\n\n\n\n\n\n## Method\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dijkstra_method <- read.csv(\"/home/ricardo/heigit_bookdown/metrics_method_dijkstra.csv\",sep=\",\")\nggplot(data_dijkstra_method, aes(x=number_od, y=time, group = method)) +\n  labs(x=\"Number of Origin-Destination (OD)\",\n       y=\"time (ms)\",\n       title=\"Pgrouting pgr_dijkstra() performance\",\n       subtitle=\"using naive, bbox, array_ag() methods\") +\n  geom_line(aes(color=method)) +\n   geom_point(aes(color=method)) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](appendix_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### Naive\n\nCentrality based on\n\n1. [Blog from Daniel I. Patterson](https://urbandatacyclist.com/2020/04/18/how-to-measure-centrality-among-bike-share-trips-using-pgrouting/)\n2. [Book by Matt Forrest \"Listing 3.26: Final query\",page 435](https://locatepress.com/book/spatial-sql)\n\n\n::: {.cell}\n\n```{.sql .cell-code}\n--- Run query\nEXPLAIN ANALYZE\n CREATE TABLE centrality_200_200_porto AS\n SELECT   b.ogc_fid,\n b.the_geom,\n count(the_geom) as centrality \n FROM  pgr_dijkstra('SELECT  ogc_fid AS id,\n\t\t\t\t\t\t\t  fromid AS source,\n\t\t\t\t\t\t\ttoid AS target,\n\t\t\t\t\t\t\tweight AS cost\n\t\t\t\t      FROM porto_alegre_net_largest',\n\t\t\t\t      ARRAY(SELECT net_id AS start_id FROM porto_200_origin  ),\n\t\t\t\t      ARRAY(SELECT net_id AS end_id FROM porto_200_destination ),\n\t\t\t\t      directed := TRUE) j\n\t\t\t\t      LEFT JOIN porto_alegre_net_largest AS b\n\t\t\t\t      ON j.edge = b.ogc_fid\n\t\t\t\t      GROUP BY  b.ogc_fid, b.the_geom\n\t\t\t\t      ORDER BY centrality DESC;  \n```\n:::\n\n\n### Method bounding box\n\nCode based on:\n\n1. [Stackoverflow from \"simpleuser001\" ](https://gis.stackexchange.com/questions/69722/why-is-any-pgr-routing-function-taking-forever-based-on-osm-data-in-an-pgrouti/69825#69825)\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nEXPLAIN ANALYZE \nCREATE TABLE centrality_200_200_porto_astrar_bbox AS \nSELECT    \n\tb.id,\n\tb.the_geom,\n\tcount(the_geom) as centrality\nFROM \n\tpgr_astar(  \n\t\t'SELECT id,\n\t\t\t    source,\n\t\t\t    target,\n\t\t\t    cost,\n\t\t\t    x1,\n\t\t\t    y1,\n\t\t\t    x2,\n\t\t\t    y2  \n\t\t\tFROM \n\t\t\t\tporto_alegre_net_pre_component_one_star\n\t\t\tWHERE the_geom && (SELECT box FROM bbox)',\n\t\t\t ARRAY(SELECT net_id FROM weight_sampling_200_origin),\n\t\t\t ARRAY(SELECT net_id FROM weight_sampling_200_destination),\n\t\t\tdirected:=TRUE,\n\t\t\theuristic:=2) j\n\t\t\tLEFT JOIN \n\t\t\t\tporto_alegre_net_pre_component_one_star AS b\n\t\t\tON \n\t\t\t\tj.edge = b.id\n\t\t\tGROUP BY  \n\t\t\t\tb.id,\n\t\t\t\tb.the_geom\n\t\t\tORDER BY \n\t\t\t\tcentrality DESC;   \n\n```\n:::\n\n\n### Method array_agg()\n\nCode based on:\n\n1. [Stackoverflow from \"Timothy Dalton\"](https://gis.stackexchange.com/questions/432035/pgrouting-computation-time-code-efficiency)\n\n\n::: {.cell}\n\n```{.sql .cell-code}\n---- Run query using array_agg()\nEXPLAIN ANALYZE\nCREATE TABLE porto_100_dijkstra_agg AS\nWITH pgr_result AS (\n  SELECT pgr_dijkstra('SELECT ogc_fid AS id,\n\t         fromid AS source,\n\t\t\ttoid AS target,\n\t\t\t weight AS cost FROM porto_alegre_net_largest',\n    array_agg(fv), array_agg(tv), \n    directed := true\n  ) FROM vertices_lookup_10 \n) \nSELECT \n b.ogc_fid,\n b.the_geom,\n count(the_geom) as centrality \nFROM pgr_result\nLEFT JOIN porto_alegre_net_largest AS b\nON (pgr_dijkstra).edge = b.ogc_fid\nGROUP BY \n\tthe_geom, b.ogc_fid\nORDER BY \n\tcentrality DESC;\n---- Max centrality value\nselect max(centrality) FROM porto_100_dijkstra_agg ;\n---- Number of rows\nselect count(*) FROM porto_100_dijkstra_agg ;\n```\n:::\n\n\n## Algorithm\n\n### pgr_dijkstra\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_algorithms_naive <- read.csv(\"/home/ricardo/heigit_bookdown/metrics_algorithm_naive.csv\", sep=\",\")\nggplot(data_algorithms_naive,aes(x=number_od, y=time, group = algorithm)) +\n  labs(x=\"Number of Origin-Destination (OD)\",\n       y=\"time (ms)\",\n       title=\"Pgrouting performance\",\n       subtitle=\"Naive method on dijkstra,bddijkstra, astar, bdastar\") +\n  geom_line(aes(color=algorithm)) +\n   geom_point(aes(color=algorithm)) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](appendix_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### pgr_astrar()\n\n\n::: {.cell}\n\n```{.sql .cell-code}\nEXPLAIN ANALYZE\nCREATE TABLE centrality_10_10_porto_astrar AS\nSELECT  \n\tb.ogc_fid,\n\t b.the_geom,\n \tcount(the_geom) as centrality \nFROM pgr_astar(\n\t'SELECT ogc_fid AS id,\n\t\t\tfromid AS source,\n\t\t\ttoid AS target,\n\t\t\tweight AS cost,\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2\n\tFROM porto_alegre_net_largest_astar',\n\tARRAY(SELECT net_id FROM  random_10_origin),\n\tARRAY(SELECT net_id FROM  random_10_destination),\n\t\t     directed:=TRUE,\n\t\t     heuristic:=2) j\n                      left JOIN porto_alegre_net_largest_astar AS b\n                      ON j.edge = b.ogc_fid\n                      GROUP BY  b.ogc_fid, b.the_geom\n                      ORDER BY centrality DESC;  \n\n--- check max centrality                     \nSELECT max(centrality) FROM centrality_10_10_porto_astrar ;\n--- check max rows\nSELECT  count(*) FROM centrality_10_10_porto_astrar;\n```\n:::\n\n\n### pgr_bdijkstra\n\n::: {.cell}\n\n```{.sql .cell-code}\n\n```\n:::\n\n\n\n### pgr_bdastar()\n\n::: {.cell}\n\n```{.sql .cell-code}\nEXPLAIN ANALYZE\nCREATE TABLE centrality_100_100_porto_bdastrar AS \nSELECT    b.ogc_fid,\n          b.the_geom,\n          count(the_geom) as centrality\nFROM \n  pgr_bdAstar(\n      'SELECT\n          ogc_fid AS id,\n          fromid AS source,\n          toid AS target,\n          weight AS cost,\n          x1,\n          y1,\n          x2,\n          y2  \n  FROM\n    porto_alegre_net_largest_astar',\n    ARRAY(SELECT net_id FROM  random_100_origin),\n    ARRAY(SELECT net_id FROM  random_100_destination),\n    directed:=TRUE,\n    heuristic:=2) j\n    LEFT JOIN \n      porto_alegre_net_largest_astar AS b\n      ON j.edge = b.ogc_fid\n      GROUP BY  b.ogc_fid, b.the_geom\n      ORDER BY centrality DESC;  \n```\n:::\n\n\n### Other code \n\n\n::: {.cell}\n\n```{.sql .cell-code}\nCREATE TABLE od_40420_snapped_origin AS\nSELECT DISTINCT ON (net.id)\n       pt.id AS pt_id,\n       net.id AS net_id,\n       net.the_geom\nFROM \n(select * \nFROM \n    od_77763 as pt) as pt\nCROSS JOIN\nLATERAL (SELECT\n        * \n        FROM porto_alegre_net_largest_vertices_pgr AS net\n         ORDER BY net.the_geom <-> pt.geometry \n        LIMIT 1) AS net;\n\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code}\nCREATE TABLE random_272_destination  AS\nwith random_272_destination AS (\n        SELECT\n            * \n        FROM \n            od_40420_snapped_origin \n        ORDER BY random() LIMIT 200)\n        SELECT * FROM  random_272_destination;  \n\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code}\nCREATE TEMP TABLE vertices_lookup_v5 \nAS             \nWITH all_pairs AS (\n  SELECT f.net_id AS fid, f.the_geom as fgeom,\n         t.net_id AS tid, t.the_geom as tgeom\n    FROM random_272_origin AS f,\n         random_272_destination AS t\n),\nvertices AS (\n  SELECT fid, tid,\n     (SELECT id\n        FROM porto_alegre_net_largest_vertices_pgr AS way\n       ORDER BY way.the_geom <-> fgeom\n       LIMIT 1) as fv,\n     (SELECT id\n        FROM porto_alegre_net_largest_vertices_pgr AS way\n       ORDER BY way.the_geom <-> tgeom\n       LIMIT 1) as tv\n  FROM all_pairs\n)\nSELECT * FROM vertices;\n\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code}\nCREATE TABLE porto_272_272_dijkstra AS\n WITH pgr_result AS (\n   SELECT pgr_dijkstra('SELECT id,\n           source,\n    target,\n     cost FROM porto_alegre_net_largest',\n     array_agg(fv), array_agg(tv), \n     directed := true\n   ) FROM vertices_lookup_v5\n )\nSELECT (pgr_dijkstra).*, a.fid, a.tid FROM pgr_result\nJOIN vertices_lookup_v5 a\nON (pgr_dijkstra).start_vid = a.fv\nAND (pgr_dijkstra).end_vid = a.tv;\n\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code}\nCREATE TEMP TABLE vertices_lookup_v5                     \nAS             \nWITH all_pairs AS (\n  SELECT f.net_id AS fid, f.the_geom as fgeom,\n         t.net_id AS tid, t.the_geom as tgeom\n    FROM random_272_origin AS f,                                                                      \n         random_272_destination AS t               \n),                                                                                     \nvertices AS (\n  SELECT fid, tid,\n     (SELECT id\n        FROM porto_alegre_net_largest_vertices_pgr AS way\n       ORDER BY way.the_geom <-> fgeom\n       LIMIT 1) as fv,\n     (SELECT id\n        FROM porto_alegre_net_largest_vertices_pgr AS way\n       ORDER BY way.the_geom <-> tgeom\n       LIMIT 1) as tv\n  FROM all_pairs\n)\nSELECT * FROM vertices;\n\n```\n:::\n\n::: {.cell}\n\n```{.sql .cell-code}\n\nCREATE TEMP TABLE vertices_lookup_v5                     \nAS             \nWITH all_pairs AS (\n  SELECT f.net_id AS fid, f.the_geom as fgeom,\n         t.net_id AS tid, t.the_geom as tgeom\n    FROM random_272_origin AS f,                                                                      \n         random_272_destination AS t               \n),                                                                                     \nvertices AS (\n  SELECT fid, tid,\n     (SELECT id\n        FROM porto_alegre_net_largest_vertices_pgr AS way\n       ORDER BY way.the_geom <-> fgeom\n       LIMIT 1) as fv,\n     (SELECT id\n        FROM porto_alegre_net_largest_vertices_pgr AS way\n       ORDER BY way.the_geom <-> tgeom\n       LIMIT 1) as tv\n  FROM all_pairs\n)\nSELECT * FROM vertices;\n\n```\n:::",
    "supporting": [
      "appendix_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<script src=\"site_libs/pdfmake-1.13.6/pdfmake.js\"></script>\n<script src=\"site_libs/pdfmake-1.13.6/vfs_fonts.js\"></script>\n<link href=\"site_libs/dt-ext-buttons-1.13.6/css/buttons.dataTables.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/dataTables.buttons.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.html5.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.colVis.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.print.min.js\"></script>\n<link href=\"site_libs/dt-ext-rowgroup-1.13.6/css/rowGroup.dataTables.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-ext-rowgroup-1.13.6/js/dataTables.rowGroup.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}